searchState.loadedDescShard("spin_factor_outbound_networking", 0, "An address is a url-like string that contains a host, a …\nA cheaply-clonable set of blocked networks\nTLS configurations for a specific component.\nA check for whether a URL is allowed by the outbound …\nA parsed URL used for outbound networking.\nShared TLS client configuration\nGet the raw values of the <code>allowed_outbound_hosts</code> locked …\nDetermine if the supplied url is allowed\nChecks if allowed hosts permit relative requests\nChecks address against allowed hosts\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a [<code>ClientConfig</code>] for the given host authority.\nReturns the inner <code>rustls::ClientConfig</code> for consumption by …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true iff the given address is blocked.\nReturns true iff no networks are blocked.\nTry to parse the address.\nParse a URL.\nRecords the address host, port, and database as fields on …\nRemoves and returns any addresses with blocked IPs from …\nSets a handler to be called when a request is disallowed …\nValidates that all service chaining of an app will be …\nA DER-encoded X.509 certificate; as specified in RFC 5280\nTLS configuration for one or more component(s) and host(s).\nAn RSA private key\nA PKCS#8 private key\nA DER-encoded X.509 private key, in one of several formats\nRuntime configuration for outbound networking.\nA Sec1 private key\nIf true, non-globally-routable networks are blocked\nBlocked IP networks\nA certificate and private key to be used as the client …\nTLS client configs\nClone the private key to a <code>&#39;static</code> value\nThe component(s) this configuration applies to.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA const constructor to create a <code>CertificateDer</code> from a …\nThe host(s) this configuration applies to.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this certificate into its owned variant, …\nA set of CA certs that should be considered valid roots.\nYield the DER-encoded bytes of the private key\nIf true, the “standard” CA certs defined by …\nSpin’s default handling of the runtime configuration for …\nGet the runtime configuration for client TLS from a TOML …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new <code>SpinRuntimeConfig</code>.")