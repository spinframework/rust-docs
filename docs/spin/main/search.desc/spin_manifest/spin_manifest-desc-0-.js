searchState.loadedDescShard("spin_manifest", 0, "Configuration of an application for the Spin runtime.\nA Spin manifest schema version.\nSpin manifest schema version 1.\nSpin manifest schema version 2.\nCompatibility for old manifest versions.\nDetects the Spin manifest schema version of the given TOML …\nSpin manifest errors\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nParses a V1 or V2 app manifest file into a <code>AppManifest</code>.\nParses a V1 or V2 app manifest into a <code>AppManifest</code>.\nManifest normalization functions.\nSerialization types for the Spin manifest file format …\nConverts the old <code>allowed_http_hosts</code> field to the new …\nConverts a V1 app manifest to V2.\nSpin manifest errors\nInvalid digest format.\nInvalid ID format.\nInvalid trigger config\nInvalid variable definition\nInvalid manifest version\nIO error\nError serializing metadata\nError parsing TOML\nValidation error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe invalid ID\nThe invalid variable name\nThe reason why the ID is invalid\nThe reason why the config is invalid\nThe reason why the variable is invalid\nThe trigger type\nNormalizes some optional <code>AppManifest</code> features into a …\nSerialization types for the Spin manifest V1.\nSerialization types for the Spin manifest V2.\nApp manifest\nApp trigger config\nComponent build configuration\nThe file, package, or URL containing the component Wasm …\nComponent definition\n<code>source = &quot;bin/cart.wasm&quot;</code>\n<code>&quot;images/*.png&quot;</code>\n<code>{ ... }</code>\n…\n…\nThe name of the application variable.\nThe files the component is allowed to read. Each list …\n<code>ai_models = [&quot;llama2-chat&quot;]</code>\n<code>allowed_http_hosts = [&quot;example.com&quot;]</code>\n<code>allowed_outbound_hosts</code> = [“redis://redis.com:6379”]`\n<code>authors = [&quot;author@example.com&quot;]</code>\nBuild configuration\nThe command or commands to build the application. If …\nThe commands to execute for the build\n<code>[[component]]</code>\nTrigger config\n<code>config = { name = &quot;{{ app_var }}&quot;}</code>\nThe value of the variable if no value is supplied at …\n<code>description = &quot;App description&quot;</code>\n<code>description = &quot;Component description&quot;</code>\nA brief description of the variable.\n<code>environment = { VAR = &quot;value&quot; }</code>\n<code>exclude_files = [&quot;secrets/*&quot;]</code>\n<code>files = [...]</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n`id = “component-id”\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>key_value_stores = [&quot;default&quot;]</code>\n<code>name = &quot;my-app&quot;</code>\nWhether a value must be supplied at runtime. If not …\nIf set, this variable should be treated as sensitive.\n<code>source = ...</code>\n<code>sqlite_databases = [&quot;default&quot;]</code>\n<code>trigger = { ... }</code>\n<code>[component.trigger]</code>\n<code>type = &quot;trigger-type&quot;</code>\n<code>[variables]</code>\n<code>version = &quot;1.0.0&quot;</code>\nSource files to use in <code>spin watch</code>. This is a set of paths …\nThe working directory for the build command. If omitted, …\nThe SHA256 digest of the Wasm component binary. This must …\nThe package containing the Wasm component binary.\nThe registry containing the Wasm component binary.\nThe URL of the Wasm component binary.\nThe version of the package containing the Wasm component …\nThe path where the <code>source</code> directory appears in the guest. …\nThe directory to be made available in the guest.\nApp details\nApp manifest\nA Spin component.\nComponent build configuration\nComponent dependencies\nSpecifies how to satisfy an import dependency of the …\nThe file, package, or URL containing the component Wasm …\nComponent reference or inline definition\n…\n<code>{ ... }</code>\nA “kebab-case” identifier.\n…\n<code>source = &quot;bin/cart.wasm&quot;</code>\nOne or many <code>ComponentSpec</code>(s)\n<code>... = { version = &quot;0.1.0&quot;, registry = &quot;registry.io&quot;, ...}</code>\n<code>&quot;images/*.png&quot;</code>\n<code>{ ... }</code>\n<code>&quot;component-id&quot;</code>\n…\n…\nA “snake_case” identifier.\nTrigger configuration. A trigger maps an event of the …\nThe name of the application variable.\n<code>... = &quot;&gt;= 0.1.0&quot;</code>\nThe files the component is allowed to read. Each list …\nThe AI models which the component is allowed to access. …\nDeprecated. Use <code>allowed_outbound_hosts</code> instead.\nThe network destinations which the component is allowed to …\n<code>[application]</code>\nThe author(s) of the application.\nThe component build configuration.\nThe command or commands to build the application. If …\nThe component that Spin should run when the trigger …\n<code>[component.&lt;id&gt;]</code>\nReserved for future use.\nOpaque trigger-type-specific config\nThe value of the variable if no value is supplied at …\nSpecifies how to satisfy Wasm Component Model imports of …\nIf true, dependencies can invoke Spin APIs with the same …\nA human-readable description of the application.\nA human-readable description of the component.\nA brief description of the variable.\nEnvironment variables to be set for the Wasm module.\nAny files or glob patterns that should not be available to …\nThe files the component is allowed to read. Each list …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nOptional identifier for the trigger.\n<code>dependencies = { &quot;foo:bar&quot; = &quot;&gt;= 0.1.0&quot; }</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe key-value stores which the component is allowed to …\nThe name of the application.\nCombine <code>allowed_outbound_hosts</code> with the deprecated …\nWhether a value must be supplied at runtime. If not …\nIf set, this variable should be treated as sensitive.\nThe file, package, or URL containing the component Wasm …\n<code>spin_manifest_version = 2</code>\nThe SQLite databases which the component is allowed to …\nSettings for custom tools or plugins. Spin ignores this …\nSettings for custom tools or plugins. Spin ignores this …\nApplication-level settings for the trigger types used in …\nThe triggers to which the application responds. Most …\nThis method ensures that the dependencies of each …\nApplication configuration variables. These can be set via …\nConfiguration variables available to the component. Names …\nThe application version. This should be a valid semver …\nSource files to use in <code>spin watch</code>. This is a set of paths …\nThe working directory for the build command. If omitted, …\nThe SHA256 digest of the Wasm file. This is required for …\nThe name of the export in the package. If omitted, this …\nThe name of the export in the package. If omitted, this …\nThe name of the export in the package. If omitted, this …\nThe name of the package to use. If omitted, this defaults …\nThe path to the Wasm file that implements the dependency.\nThe registry that hosts the package. If omitted, this …\nThe URL to the Wasm component that implements the …\nA semantic versioning constraint for the package version …\nThe SHA256 digest of the Wasm component binary. This must …\nThe package containing the Wasm component binary.\nThe registry containing the Wasm component binary.\nThe URL of the Wasm component binary.\nThe version of the package containing the Wasm component …\nThe path where the <code>source</code> directory appears in the guest. …\nThe directory to be made available in the guest.")